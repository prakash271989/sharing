name: "Terraform Infrastructure Change Management Pipeline with GitHub Actions"
on:
 push:
   branches:
   - master



env:
 # verbosity setting for Terraform logs
 TF_LOG: INFO
 # Credentials for deployment to AWS
 AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
 AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
 # S3 bucket for the Terraform state

jobs:
 terraform:
   name: "Terraform Infrastructure Change Management"
   runs-on: ubuntu-latest
   defaults:
     run:
       shell: bash
       # We keep Terraform files in the terraform directory.
       
   steps:
     - name: Checkout the repository to the runner
       uses: actions/checkout@v2

     - name: Setup Terraform with specified version on the runner
       uses: hashicorp/setup-terraform@v2
       with:
         terraform_version: 1.3.0

    
     - name: Terraform init
       id: init
       run: terraform init 

     - name: Terraform format
       id: fmt
       run: terraform fmt -check

     - name: Terraform validate
       id: validate
       run: terraform validate

     - name: Get GitHub Username
       id: get_username
       run: echo "GITHUB_ACTOR=${{ github.actor }}" >> $GITHUB_ENV

     - name: Get GitHub Email
       id: get_email
       run: |
         email=$(curl -s -H "Authorization: token ${{ secrets.token }}" https://api.github.com/users/${{ github.actor }} | jq -r '.email'); echo "GITHUB_EMAIL=$email" >> $GITHUB_ENV
         
     - name: Extract Prefix from Email
       id: extract_prefix_email
       run: |
         if [ -n "$GITHUB_EMAIL" ]; then
            PREFIX=$(echo $GITHUB_EMAIL | cut -d '@' -f 1)
            echo "PREFIX=$PREFIX" >> $GITHUB_ENV
          else
            PREFIX=$(echo $GITHUB_ACTOR | cut -d '-' -f 1)
            echo "PREFIX=$PREFIX" >> $GITHUB_ENV
          fi

     - name: Terraform plan
       id: plan
     ####  if: github.event_name == 'pull_request'
       run: terraform plan -var "developer_name=${GITHUB_ACTOR}" -var "developer_email=${GITHUB_EMAIL}" -var "prefix=${PREFIX}"
       continue-on-error: true


     - name: Terraform Apply
       id: apply
       run: terraform apply -auto-approve -var "developer_name=${GITHUB_ACTOR}" -var "developer_email=${GITHUB_EMAIL}" -var "prefix=${PREFIX}"
####
